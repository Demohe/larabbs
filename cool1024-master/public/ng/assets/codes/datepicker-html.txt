<!-- 
    // 使用标签<ts-datepicker></ts-datepicker>获取日期选择组件
    // 使用value进行双向绑定日期的值,value为一个时间串格式为 年/月/日，如 2018/3/7
    // 使用weekTitles设置日历的星期标题文字
    // 使用monthTitles设置日历的月份文字
    // 支持使用color设置颜色
    // #datepicker="tsDatepicker"，这样临时变量datepicker指代日期插件，可以用来后面的target,bind绑定
-->
<ts-datepicker 
    #datepicker="tsDatepicker" 
    [(value)]="date" [color]="theme.getColor()" 
    [weekTitles]="['一', '二', '三', '四', '五', '六', '日']"
    [monthTitles]="['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']">
</ts-datepicker>

<!-- 
    // 使用tsToggle指令初始化一个带有触发效果的dom
    // 可以使用date管道定制自己的日期输出格式
    // 使用target绑定触发日期选择/关闭,这样点击这个元素，将会显示/关闭日期面板，同一个日期选择插件可以作为多个元素的target
    // 使用bind绑定日期，这样日期面板将会跟在这个元素后面，一个日期选择插件有且只能有一个元素bind
-->
<input 
    tsToggle
    [value]="date|date :'yyyy-MM-dd'"  
    [target]="datepicker" 
    [bind]="datepicker" 
    type="text" class="form-control bg-white pointer" readonly>

<!-- 
    // button的target绑定了上面的日期选择插件，这样这个button也可以关闭/显示日期面板
    // input已经bind绑定了这个日期面板，那么button不能在bind了
-->
<button class="btn btn-white" type="button" tsToggle [target]="datepicker">
    <i class="fa fa-fw fa-calendar"></i>
</button>